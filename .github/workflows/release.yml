name: Release
on: workflow_dispatch
jobs:
  Windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib setup C:\haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build windows

      - name: Make zip for release
        shell: pwsh
        run: | 
          cd export\release\windows\bin
          Compress-Archive -Path . -DestinationPath windows.zip

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*.zip
          if-no-files-found: error      
  macOS:
    runs-on: macos-${{matrix.version}}
    strategy:
      matrix:
        version: [12, 13]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build mac

      - name: Make tar for relese
        run: |
          cd export/release/macos/bin
          tar czf macOS${{matrix.version}}.tar .

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-${{matrix.version}}
          path: export/release/macos/bin/*.tar
          if-no-files-found: error
  Android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        storage-type: [EXTERNAL, MEDIA, OBB, DATA]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android -D officialBuild -D ${{ matrix.storage-type }} -final
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: androidBuild-${{ matrix.storage-type }}
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  iOS:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build ios -D NOVIDEO

      - name: Make Ipa
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r "NovaFlare Engine.ipa" Payload

      - name: Make Zip For Release
        run: |
           cd export/release/ios/build/Release-iphoneos
           zip "NovaFlare Engine.zip" "NovaFlare Engine.ipa"

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.zip
          if-no-files-found: error
  Releaser:
    needs: [Android, iOS, macOS, Windows]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download EXTERNAL Build
        uses: actions/download-artifact@main
        with:
           name: androidBuild-EXTERNAL
           path: /home/runner

      - name: Move EXTERNAL File
        run: mv "/home/runner/NovaFlare Engine-release.apk" "/home/runner/android-EXTERNAL.apk"
            
      - name: Download OBB Build
        uses: actions/download-artifact@main
        with:
           name: androidBuild-OBB
           path: /home/runner

      - name: Move OBB File
        run: mv "/home/runner/NovaFlare Engine-release.apk" "/home/runner/android-OBB.apk"

      - name: Download DATA Build
        uses: actions/download-artifact@main
        with:
           name: androidBuild-DATA
           path: /home/runner

      - name: Move DATA File
        run: mv "/home/runner/NovaFlare Engine-release.apk" "/home/runner/android-DATA.apk"

      - name: Download MEDIA Build
        uses: actions/download-artifact@main
        with:
           name: androidBuild-MEDIA
           path: /home/runner

      - name: Move MEDIA File
        run: mv "/home/runner/NovaFlare Engine-release.apk" "/home/runner/android-MEDIA.apk"

      - name: Download iOS Build
        uses: actions/download-artifact@main
        with:
           name: iOSBuild
           path: /home/runner
      
      - name: Move iOS File
        run: mv "/home/runner/NovaFlare Engine.zip" "/home/runner/ios.zip"
  
      - name: Download macOS12 Build
        uses: actions/download-artifact@main
        with:
           name: macOSBuild-12
           path: /home/runner

      - name: Download macOS13 Build
        uses: actions/download-artifact@main
        with:
           name: macOSBuild-13
           path: /home/runner

      - name: Download Windows Build
        uses: actions/download-artifact@main
        with:
           name: windowsBuild
           path: /home/runner

      - name: Publish The Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "V1.1.5-HOTFIX"
          title: "V1.1.5 HOTFIX"
          files: |
            /home/runner/*.apk
            /home/runner/*.zip
            /home/runner/*.tar
